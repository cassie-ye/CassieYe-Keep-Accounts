{"remainingRequest":"E:\\myStudy\\github\\CassieYe-Keep-Accounts\\keep-accounts-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\myStudy\\github\\CassieYe-Keep-Accounts\\keep-accounts-vue\\src\\views\\stallManagement\\qrCodeDialog.vue?vue&type=style&index=0&id=67b3ad3c&lang=scss&scoped=true","dependencies":[{"path":"E:\\myStudy\\github\\CassieYe-Keep-Accounts\\keep-accounts-vue\\src\\views\\stallManagement\\qrCodeDialog.vue","mtime":1734316612941},{"path":"E:\\myStudy\\github\\CassieYe-Keep-Accounts\\keep-accounts-vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1733119317109},{"path":"E:\\myStudy\\github\\CassieYe-Keep-Accounts\\keep-accounts-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1733119318739},{"path":"E:\\myStudy\\github\\CassieYe-Keep-Accounts\\keep-accounts-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1733119317751},{"path":"E:\\myStudy\\github\\CassieYe-Keep-Accounts\\keep-accounts-vue\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1733119316648},{"path":"E:\\myStudy\\github\\CassieYe-Keep-Accounts\\keep-accounts-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733119316648},{"path":"E:\\myStudy\\github\\CassieYe-Keep-Accounts\\keep-accounts-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1733119318248}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoucXItY29kZS1jb250YWluZXIgewogIHRleHQtYWxpZ246IGNlbnRlcjsKICBtaW4taGVpZ2h0OiA0MDBweDsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CgogIGltZyB7CiAgICB3aWR0aDogNjAlOwogIH0KfQoKLy8gLy8g6Ieq5a6a5LmJIGVsLWRpYWxvZyDmoLflvI8KLy8gOmRlZXAoLmVsLWRpYWxvZ19fYm9keSkgewovLyAgIHBhZGRpbmc6IDBweCAyMHB4IDIwcHggMjBweDsKLy8gfQo="},{"version":3,"sources":["qrCodeDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"qrCodeDialog.vue","sourceRoot":"src/views/stallManagement","sourcesContent":["<template>\n  <div>\n    <el-dialog center :title=\"`${stallData.boothNo} 摊位二维码`\" :visible.sync=\"dialogVisible\" width=\"30%\" :before-close=\"handleClose\">\n      <div class=\"qr-code-container\">\n        <img :src=\"qrCodeUrl\" alt=\"摊位二维码\">\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    stallData: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data() {\n    return {\n      dialogVisible: false,\n      qrCodeUrl: ''\n    }\n  },\n  methods: {\n    created() {\n\n    },\n    show() {\n      this.dialogVisible = true\n      console.log(this.stallData)\n      this.$nextTick(() => {\n        this.generateQrCode()\n      })\n    },\n    handleClose(done) {\n      done()\n    },\n    generateQrCode() {\n      if (!this.stallData || !this.stallData.qrCodeBase64) {\n        console.warn('No QR code data available')\n        return\n      }\n      this.qrCodeUrl = 'data:image/png;base64,' + this.stallData.qrCodeBase64\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.qr-code-container {\n  text-align: center;\n  min-height: 400px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  img {\n    width: 60%;\n  }\n}\n\n// // 自定义 el-dialog 样式\n// :deep(.el-dialog__body) {\n//   padding: 0px 20px 20px 20px;\n// }\n</style>\n"]}]}